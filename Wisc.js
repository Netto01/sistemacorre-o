// wisc.js

// Estrutura para armazenar as tabelas normativas de todos os subtestes
const TABELAS_PONDERADAS = {
    'cb': {}, // Cubos
    'sm': {}, // Semelhanças
    'dg': {}, // Dígitos
    'cn': {}, // Conceitos Figurativos
    'cd': {}, // Códigos
    'vc': {}, // Vocabulário
    'snl': {}, // Sequência de Números e Letras
    'rm': {}, // Raciocínio Matricial
    'co': {}, // Compreensão
    'ps': {}, // Procurar Símbolos
    'cf': {}, // Completar Figuras
    'ca': {}, // Cancelamento
    'in': {}, // Informação
    'ar': {}, // Aritmética
    'rp': {}  // Raciocínio com Palavras
};

const anosFaixasNormativas = Array.from({ length: 11 }, (_, i) => i + 6); // 6 a 16 anos
const mesesFaixasNormativas = ["0", "4", "8"]; // Meses iniciais das faixas (0-3, 4-7, 8-11)

// Função para gerar uma faixa etária vazia para um subteste
function gerarFaixaVazia(maxPontosBrutos = 68) {
  const faixa = {};
  for (let i = 0; i <= maxPontosBrutos; i++) {
    faixa[i] = null; // Inicializa com null
  }
  return faixa;
}

// Preenche a estrutura para todos os subtestes e faixas etárias
Object.keys(TABELAS_PONDERADAS).forEach(subtesteId => {
    let maxPontos = 68; // Padrão geral
    if (subtesteId === 'cb') maxPontos = 68;
    if (subtesteId === 'sm') maxPontos = 44;
    if (subtesteId === 'dg') maxPontos = 54; 
    if (subtesteId === 'cn') maxPontos = 28; 
    if (subtesteId === 'cd') maxPontos = 119;
    if (subtesteId === 'vc') maxPontos = 68; 
    if (subtesteId === 'snl') maxPontos = 30;
    if (subtesteId === 'rm') maxPontos = 35;
    if (subtesteId === 'co') maxPontos = 42;
    if (subtesteId === 'ps') maxPontos = 60;
    if (subtesteId === 'cf') maxPontos = 38; // Max para Completar Figuras
    // Adicione outros limites máximos aqui conforme o manual do WISC-V
    
    anosFaixasNormativas.forEach(ano => {
        mesesFaixasNormativas.forEach(m => {
            const chaveFaixa = `${ano}-${m}`;
            if (!TABELAS_PONDERADAS[subtesteId][chaveFaixa]) {
                 TABELAS_PONDERADAS[subtesteId][chaveFaixa] = gerarFaixaVazia(maxPontos);
            }
        });
    });
});

// Função para preencher a tabela de pontos brutos para ponderados
function preencherBrutos(subtesteId, faixaEtaria, brutoOuIntervalo, valorPonderado) {
  if (!TABELAS_PONDERADAS[subtesteId]) {
    console.warn(`Subteste ID "${subtesteId}" não encontrado em TABELAS_PONDERADAS.`);
    return;
  }
  const tabelaFaixa = TABELAS_PONDERADAS[subtesteId][faixaEtaria];
  if (!tabelaFaixa) {
    console.warn(`Faixa etária ${faixaEtaria} para o subteste ${subtesteId} não encontrada ou não inicializada para preenchimento.`);
    return;
  }

  const strBrutoOuIntervalo = String(brutoOuIntervalo);

  if (strBrutoOuIntervalo === "-" || strBrutoOuIntervalo === ".") {
    return; 
  }

  if (strBrutoOuIntervalo.includes("-")) {
    const partes = strBrutoOuIntervalo.split("-");
    if (partes.length === 2 && !isNaN(parseInt(partes[0],10)) && !isNaN(parseInt(partes[1],10)) ) {
        const inicio = parseInt(partes[0], 10);
        const fim = parseInt(partes[1], 10);

        if (inicio > fim) { 
            console.error(`Range inválido "${strBrutoOuIntervalo}" (início > fim) para ${subtesteId} na faixa ${faixaEtaria}.`);
            return;
        }

        for (let i = inicio; i <= fim; i++) {
          if (tabelaFaixa.hasOwnProperty(i)) { 
              tabelaFaixa[i] = valorPonderado;
          }
        }
    } else if (partes.length === 1 && !isNaN(parseInt(partes[0],10))) { 
        const ponto = parseInt(partes[0], 10);
         if (tabelaFaixa.hasOwnProperty(ponto)) {
            tabelaFaixa[ponto] = valorPonderado;
        }
    }
  } else { 
    const ponto = parseInt(strBrutoOuIntervalo, 10);
    if (!isNaN(ponto) && tabelaFaixa.hasOwnProperty(ponto)) {
        tabelaFaixa[ponto] = valorPonderado;
    } else if (isNaN(ponto)) {
        console.error(`Ponto bruto inválido "${strBrutoOuIntervalo}" para ${subtesteId} na faixa ${faixaEtaria}.`);
    }
  }
}
// --- DADOS NORMATIVOS PARA CUBOS ('cb') ---
const dadosCubos = {
  "6-0": ["-","0","-","1","-","2","3","4-6","7-9","10-12","13-16","17-19","20-23","24-26","27-28","29-32","33-36","37-39","40-68"],
  "6-4": ["-","0","1","2","3","4","5-7","8-10","11-13","14-17","18-20","21-23","24-26","27-30","31-33","34-37","38-41","42-68"], // Assumindo que ponderado 1 é "-"
  "6-8": ["-","0","1","2","3-4","5-6","7-9","10-12","13-15","16-18","19-21","22-25","26-28","29-31","32-35","36-39","40-43","44-68"], // Assumindo que ponderado 1 é "-"
  "7-0": ["-","0","1","2","3-5","6-7","8-10","11-13","14-16","17-19","20-23","24-26","27-29","30-33","34-36","37-40","41-44","45-68"],
  "7-4": ["-","0","1","2-3","4-6","7-8","9-11","12-14","15-17","18-20","21-24","25-27","28-31","32-34","35-38","39-42","43-46","47-68"],
  "7-8": ["0","1","2","3-4","5-7","8-9","10-12","13-15","16-18","19-22","23-25","26-29","30-32","33-36","37-39","40-43","44-47","48-68"],
  "8-0": ["0","1","2-3","4-5","6-8","9-11","12-13","14-16","17-20","21-23","24-26","27-30","31-34","35-37","38-41","42-45","46-49","50-68"],
  "8-4": ["0","1","2-4","5-6","7-9","10-12","13-15","16-18","19-21","22-24","25-28","29-31","32-35","36-39","40-42","43-46","47-50","51-68"],
  "8-8": ["0","1-2","3-4","5-7","8-10","11-13","14-16","17-19","20-22","23-26","27-29","30-33","34-36","37-40","41-44","45-48","49-52","53-68"],
  "9-0": ["0","1","2-3","4-5","6-8","9-11","12-14","15-17","18-20","21-23","24-27","28-30","31-34","35-38","39-41","42-45","46-49","50-53","54-68"],
  "9-4": ["0","1","2-3","4-6","7-9","10-12","13-15","16-18","19-21","22-25","26-28","29-32","33-35","36-39","40-43","44-47","48-51","52-55","56-68"],
  "9-8": ["0","1-2","3-4","5-7","8-10","11-13","14-16","17-19","20-22","23-26","27-29","30-33","34-37","38-40","41-44","45-48","49-52","53-56","57-68"],
  "10-0":["0","1-2","3-5","6-8","9-11","12-14","15-17","18-20","21-24","25-27","28-31","32-34","35-38","39-42","43-46","47-50","51-54","55-58","59-68"],
  "10-4":["0","1-2","3-5","6-8","9-11","12-15","16-18","19-21","22-25","26-28","29-32","33-36","37-39","40-43","44-47","48-51","52-55","56-59","60-68"],
  "10-8":["0","1-3","4-6","7-9","10-12","13-15","16-19","20-22","23-26","27-29","30-33","34-37","38-41","42-44","45-48","49-52","53-56","57-60","61-68"],
  "11-0":["0-1","2-3","4-6","7-10","11-13","14-16","17-20","21-23","24-27","28-31","32-34","35-38","39-42","43-46","47-50","51-54","55-58","59-61","62-68"],
  "11-4":["0-1","2-3","4-7","8-10","11-14","15-17","18-21","22-24","25-28","29-32","33-36","37-39","40-43","44-47","48-51","52-55","56-59","60-62","63-68"],
  "11-8":["0-1","2-4","5-7","8-11","12-14","15-18","19-22","23-25","26-29","30-33","34-37","38-41","42-44","45-48","49-52","53-56","57-60","61-63","64-68"],
  "12-0":["0-3","4-5","6-9","10-13","14-17","18-21","22-25","26-29","30-33","34-37","38-41","42-45","46-49","50-53","54-57","58-60","61-63","64-66","67-68"], // Dados da segunda ocorrência no seu original
  "12-4":["0-3","4-5","6-9","10-13","14-17","18-22","23-26","27-30","31-34","35-38","39-42","43-46","47-50","51-54","55-58","59-61","62-64","65-66","67-68"], // Dados da segunda ocorrência no seu original
  "12-8":["0-2","3-4","5-8","9-12","13-16","17-20","21-24","25-28","29-32","33-36","37-40","41-44","45-48","49-52","53-56","57-59","60-63","64-65","66-68"],
  "13-0":["0-3","4-6","7-10","11-14","15-18","19-23","24-27","28-32","33-36","37-40","41-44","45-48","49-52","53-56","57-60","61-63","64-65","66-67","68"],
  "13-4":["0-3","4-6","7-10","11-14","15-19","20-23","24-28","29-33","34-37","38-41","42-45","46-49","50-53","54-57","58-60","61-63","64-65","66-67","68"],
  "13-8":["0-3","4-5","6-9","10-13","14-18","19-22","23-27","28-31","32-35","36-39","40-43","44-47","48-51","52-55","56-59","60-62","63-65","66-67","68"],
  "14-0":["0-4","5-7","8-11","12-15","16-19","20-24","25-29","30-34","35-38","39-43","44-47","48-51","52-55","56-59","60-62","63-64","65-66","67","68"],
  "14-4":["0-4","5-7","8-11","12-15","16-20","21-25","26-30","31-34","35-39","40-44","45-48","49-52","53-56","57-59","60-63","64-65","66","67","68"],
  "14-8":["0-3","4-6","7-10","11-14","15-19","20-24","25-29","30-33","34-38","39-42","43-46","47-50","51-54","55-58","59-61","62-64","65-66","67","68"],
  "15-0":["0-4","5-7","8-11","12-16","17-20","21-25","26-30","31-35","36-40","41-45","46-49","50-53","54-57","58-61","62-64","65-66","67","68","-"], // Se 68 é 18, ponderado 19 é "-" ou outro valor?
  "15-4":["0-5","6-8","9-12","13-17","18-21","22-26","27-31","32-36","37-41","42-46","47-50","51-54","55-58","59-61","62-64","65-66","67","68","-"],
  "15-8":["0-4","5-7","8-11","12-16","17-20","21-25","26-30","31-35","36-40","41-44","45-49","50-53","54-56","57-60","61-63","64-65","66","67","68"],
  "16-8":["0-5","6-8","9-12","13-17","18-21","22-26","27-31","32-36","37-41","42-46","47-51","52-55","56-58","59-62","63-65","66","67","68","-"]
};

for (const faixaEtariaKey in dadosCubos) {
    if (dadosCubos.hasOwnProperty(faixaEtariaKey)) {
        const rawScoreStrings = dadosCubos[faixaEtariaKey];
        rawScoreStrings.forEach((brutoOuIntervalo, index) => {
            const valorPonderado = index + 1;
            if (brutoOuIntervalo !== "-") {
                 preencherBrutos("cb", faixaEtariaKey, brutoOuIntervalo, valorPonderado);
            }
        });
    }
}

// --- DADOS NORMATIVOS PARA SEMELHANÇAS ('sm') ---
const dadosSemelhancasManuais = { // Faixas 6-0 a 9-0
  "6-0": ["-","-","-","-","0","-","1","2","3-4","5","6-8","9-11","12-14","15-16","17-18","19-21","22-24","25-27","28-44"],
  "6-4": ["-","-","-","-","0","-","1","2-3","4-5","6","7-9","10-12","13-14","15-17","18-19","20-22","23-25","26-28","29-44"],
  "6-8": ["-","-","-","0","-","1","2","3-4","5-6","7","8-10","11-13","14-15","16-18","19-20","21-23","24-26","27-29","30-44"],
  "7-0": ["-","-","-","0","-","1","2","3-4","5-6","7-8","9-11","12-13","14-16","17-19","20-21","22-24","25-27","28-30","31-44"],
  "7-4": ["-","-","-","0","1","2","3","4-5","6-7","8-9","10-12","13-14","15-17","18-19","20-22","23-25","26-28","29-30","31-44"],
  "7-8": ["-","-","-","0","1","2","3-4","5-6","7-8","9-10","11-13","14-15","16-18","19-20","21-23","24-25","26-28","29-31","32-44"],
  "8-0": ["-","-","-","0","1","2-3","4-5","6-7","8-9","10-11","12-14","15-16","17-18","19-21","22-24","25-26","27-29","30-31","32-44"],
  "8-4": ["-","-","0","-","1-2","3-4","5-6","7-8","9-10","11-12","13-14","15-17","18-19","20-22","23-24","25-27","28-30","31-32","33-44"],
  "8-8": ["-","0","-","1","2","3-4","5-6","7-9","10-11","12-13","14-15","16-18","19-20","21-23","24-25","26-28","29-30","31-32","33-44"],
  "9-0": ["-","0","-","1","2-3","4-5","6-7","8-9","10-12","13-14","15-16","17-19","20-21","22-24","25-26","27-28","29-31","32-33","34-44"]
};

const dadosSemelhancasParte2 = { // Faixas 9-4 a 16-8 (antigo listasSemelhancas)
  "9-4": ["0","-","1","2","3-4","5-6","7-8","9-10","11-13","14-15","16-17","18-20","21-22","23-24","25-27","28-29","30-31","32-33","34-44"],
  "9-8": ["0","-","1","2","3-4","5-7","8-9","10-11","12-13","14-16","17-18","19-21","22-23","24-25","26-28","29-30","31-32","33-34","35-44"],
  "10-0":["0","-","1","2","3-5","6-7","8-10","11-12","13-14","15-17","18-19","20-21","22-23","24-26","27-28","29-30","31-32","33-34","35-44"],
  "10-4":["0","-","1","2-3","4-5","6-8","9-10","11-13","14-15","16-17","18-20","21-22","23-24","25-27","28-29","30-31","32-33","34-35","36-44"],
  "10-8":["0","-","1","2-3","4-6","7-8","9-11","12-13","14-16","17-18","19-21","22-23","24-25","26-28","29-30","31-32","33","34-35","36-44"],
  "11-0":["0","-","1","2-4","5-6","7-9","10-12","13-14","15-17","18-19","20-22","23-24","25-26","27-28","29-30","31-32","33-34","35","36-44"],
  "11-4":["0","1","2","3-4","5-7","8-10","11-12","13-14","15-17","18-20","21-23","24-25","26-27","28-29","30-31","32","33-34","35-36","37-44"],
  "11-8":["0","1","2","3-4","5-7","8-10","11-13","14-15","16-18","19-20","21-23","24-25","26-27","28-29","30-31","32-33","34","35-36","37-44"],
  "12-0":["0","1","2","3-4","5-7","8-10","11-13","14-15","16-18","19-21","22-24","25-26","27-28","29-30","31-32","33","34-35","36","37-44"],
  "12-4":["0","1","2","3-4","5-8","9-11","12-14","15-16","17-19","20-22","23-24","25-26","27-28","29-30","31-32","33-34","35","36","37-44"],
  "12-8":["0","1","2-3","4-5","6-8","9-11","12-14","15-17","18-19","20-22","23-25","26-27","28-29","30-31","32-33","34","35-36","-","37-44"],
  "13-0":["0","1","2-3","4-5","6-8","9-12","13-15","16-17","18-20","21-23","24-25","26-28","29-30","31-32","33","34-35","36","37","38-44"],
  "13-4":["0","1","2-3","4-5","6-8","9-12","13-15","16-18","19-20","21-23","24-26","27-28","29-30","31-32","33-34","35","36","37","38-44"],
  "13-8":["0","1","2-3","4-5","6-9","10-13","14-16","17-18","19-21","22-24","25-26","27-29","30-31","32-33","34","35-36","37","-","38-44"],
  "14-0":["0","1","2-3","4-6","7-9","10-13","14-16","17-19","20-22","23-25","26-27","28-29","30-31","32-33","34-35","36","37","38","39-44"],
  "14-4":["0","1","2-3","4-6","7-9","10-13","14-16","17-19","20-23","24-25","26-28","29-30","31-32","33","34-35","36","37","38","39-44"],
  "14-8":["0","1","2-3","4-6","7-10","11-14","15-17","18-20","21-23","24-26","27-28","29-30","31-32","33-34","35","36","37","38","39-44"],
  "15-0":["0","1","2-3","4-6","7-10","11-14","15-17","18-20","21-24","25-26","27-29","30-31","32-33","34","35-36","37","38","39","40-44"],
  "15-4":["0","1-2","3-4","5-7","8-10","11-14","15-18","19-21","22-24","25-27","28-29","30-31","32-33","34","35-36","37","38","39","40-44"],
  "15-8":["0","1-2","3-4","5-7","8-10","11-14","15-18","19-21","22-25","26-27","28-30","31-32","33-34","35","36","37","38","39","40-44"],
  "16-0":["0-1","2","3-4","5-7","8-11","12-15","16-18","19-22","23-25","26-28","29-30","31-32","33-34","35","36","37","38","39","40-44"],
  "16-4":["0-1","2","3-4","5-7","8-11","12-15","16-19","20-22","23-26","27-29","30-31","32-33","34","35","36","37","38","39","40-44"],
  "16-8":["0-1","2","3-4","5-7","8-11","12-15","16-19","20-22","23-26","27-29","30-31","32-33","34","35","36","37","38","39","40-44"]
};

const dadosSemelhancas = {...dadosSemelhancasManuais, ...dadosSemelhancasParte2};

for (const faixaEtariaKey in dadosSemelhancas) {
    if (dadosSemelhancas.hasOwnProperty(faixaEtariaKey)) {
        const rawScoreStrings = dadosSemelhancas[faixaEtariaKey];
        rawScoreStrings.forEach((brutoOuIntervalo, index) => {
            const valorPonderado = index + 1;
            if (brutoOuIntervalo !== "-") {
                 preencherBrutos("sm", faixaEtariaKey, brutoOuIntervalo, valorPonderado);
            }
        });
    }
}

// --- DADOS NORMATIVOS PARA DÍGITOS ('dg') ---
const dadosDigitos = { // Antigo listasDigitos
  "6-0": ["0","1","2","3","4","5","6","7","8","9", "10","11","12-13","14","15","16","17","18-19","20-32"],
  "6-4": ["0-1","2","3","4","5","6","7","8","9","10", "11","12","13","14","15-16","17","18","19","20-32"],
  "6-8": ["0-2","3","-","4","5","6","7","8","9","10", "11","12-13","14","15","16","17","18-19","20","21-32"],
  "7-0": ["0-2","3","4","5","6","7","8","9","10","11", "12","13","14","15-16","17","18","19","20-21","22-32"],
  "7-4": ["0-3","4","-","5","6","7","8","9","10","11", "12","13-14","15","16","17","18-19","20","21","22-32"],
  "7-8": ["0-3","4","5","6","7","8","9","10","11","12", "13","14","15","16-17","18","19","20","21-22","23-32"],
  "8-0": ["0-4","5","-","6","7","8","9","10","11","12", "13","14-15","16","17","18","19-20","21","22","23-32"],
  "8-4": ["0-4","5","6","-","7","8","9","10","11","12-13", "14","15","16","17","18-19","20","21","22-23","24-32"],
  "8-8": ["0-4","5","6","7","8","9","10","11","12","13", "14","15","16-17","18","19","20-21","22","23","24-32"],
  "9-0": ["0-5","6","-","7","8","9","10","11","12","13", "14","15-16","17","18","19-20","21","22","23-24","25-32"],
  "9-4": ["0-5","6","7","-","8","9","10","11","12","13-14", "15","16","17","18-19","20","21","22-23","24","25-32"],
  "9-8": ["0-5","6","7","8","9","-","10","11","12-13","14", "15","16","17-18","19","20","21-22","23","24-25","26-32"],
  "10-0": ["0-6","7","-","8","9","10","11","12","13","14", "15","16-17","18","19","20-21","22","23-24","25","26-32"],
  "10-4": ["0-6","7","8","-","9","10","11","12","13","14", "15-16","17","18","19-20","21","22","23-24","25-26","27-32"],
  "10-8": ["0-6","7","8","-","9","10","11","12","13","14-15", "16","17","18-19","20","21","22-23","24","25-26","27-32"],
  "11-0": ["0-7","8","-","9","10","11","12","13","14","15", "16-17","18","19-20","21","22-23","24","25-26","27-28","29-32"],
  "11-4": ["0-7","8","9","10","-","11","12","13","14","15", "16-17","18","19-20","21","22-23","24","25-26","27-28","29-32"],
  "11-8": ["0-7","8","9","10","-","11","12","13","14","15-16", "17","18","19-20","21","22-23","24","25-26","27-28","29-32"],
  "12-0": ["0-7","8","9","10","-","11","12","13","14","15", "16-17","18","19-20","21","22-23","24","25-26","27-28","29-32"],
  "12-4": ["0-7","8","9","10","-","11","12","13","14","15", "16-17","18","19-20","21","22-23","24","25-26","27-28","29-32"],
  "12-8": ["0-7","8","9","10","-","11","12","13","14","15-16", "17","18","19-20","21","22-23","24","25-26","27-28","29-32"],
  "13-0": ["0-7","8","9","10","11","-","12","13","14","15-16", "17","18-19","20","21-22","23","24-25","26-27","28","29-32"],
  "13-4": ["0-8","9","-","10","11","12","-","13","14","15-16", "17","18-19","20","21-22","23","24-25","26-27","28-29","30-32"],
  "13-8": ["0-8","9","10","-","11","12","13","-","14-15","16", "17","18-19","20","21-22","23","24-25","26-27","28-29","30-32"],
  "14-0": ["0-8","9","10","-","11","12","13","14","15","16", "17-18","19","20-21","22","23-24","25","26-27","28-29","30-32"],
  "14-4": ["0-8","9","10","11","-","12","13","14","15","16", "17-18","19","20-21","22","23-24","25-26","27-28","29-30","31-32"],
  "14-8": ["0-8","9","10","11","-","12","13","14","15","16", "17-18","19","20-21","22-23","24","25-26","27-28","29-30","31-32"],
  "15-0": ["0-8","9","10","11","-","12","13","14","15","16", "17-18","19-20","21","22-23","24","25-26","27-28","29-30","31-32"],
  "15-4": ["0-8","9","10","11","-","12","13","14","15","16", "17-18","19-20","21","22-23","24","25-26","27-28","29-30","31-32"],
  "15-8": ["0-8","9","10","11","12","-","13","14","15","16-17", "18","19-20","21-22","23","24-25","26","27-28","29-30","31-32"],
  "16-0": ["0-8","9","10","11","12","-","13","14","15","16-17", "18","19-20","21-22","23","24-25","26","27-28","29-30","31-32"],
  "16-4": ["0-8","9","10","11","12","13","-","14","15","16-17", "18-19","20","21-22","23","24-25","26-27","28-29","30","31-32"],
  "16-8": ["0-1","2","3-4","5-7","8-11","12-15","16-19","20-22","23-26","27-29", "30-31","32-33","34","35","36","37","38","39","40-44"] // ATENÇÃO: Esta linha parece ser de Semelhanças, não Dígitos. Verificar com o manual.
};

for (const faixaEtariaKey in dadosDigitos) {
    if (dadosDigitos.hasOwnProperty(faixaEtariaKey)) {
        const rawScoreStrings = dadosDigitos[faixaEtariaKey];
        rawScoreStrings.forEach((brutoOuIntervalo, index) => {
            const valorPonderado = index + 1;
            if (brutoOuIntervalo !== "-") {
                 preencherBrutos("dg", faixaEtariaKey, brutoOuIntervalo, valorPonderado);
            }
        });
    }
}

// --- DADOS NORMATIVOS PARA CONCEITOS FIGURATIVOS ('cn') ---
const dadosConceitosFigurativos = {
  "6-0": ["-", "0", "-", "1", "2", "3", "4-5", "6", "7", "8-9", "10-11", "12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-28"],
  "6-4": ["0", "-", "1", "2", "3", "4", "5", "6-7", "8", "9-10", "11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24", "25-28"],
  "6-8": ["0", "-", "1", "2", "3-4", "5", "6", "7-8", "9", "10", "11-12", "13-14", "15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-28"],
  "7-0": ["0", "1", "2", "3", "4", "5-6", "7", "8", "9-10", "11", "12-13", "14", "15-16", "17-18", "19-20", "21-22", "23-24", "25", "26-28"],
  "7-4": ["0", "1", "2", "3-4", "5", "6", "7", "8-9", "10", "11-12", "13", "14-15", "16", "17-18", "19-20", "21-22", "23-24", "25", "26-28"],
  "7-8": ["0", "1-2", "3", "4", "5", "6-7", "8", "9", "10-11", "12", "13-14", "15", "16-17", "18", "19-20", "21-22", "23-24", "25", "26-28"],
  "8-0": ["0-1", "2", "3", "4-5", "6", "7", "8-9", "10", "11", "12-13", "14", "15-16", "17", "18-19", "20", "21-22", "23-24", "25", "26-28"],
  "8-4": ["0-1", "2", "3-4", "5", "6", "7-8", "9", "10-11", "12", "13", "14-15", "16", "17-18", "19", "20-21", "22", "23-24", "25", "26-28"],
  "8-8": ["0-1", "2-3", "4", "5", "6-7", "8", "9-10", "11", "12", "13-14", "15", "16-17", "18", "19-20", "21", "22-23", "24-25", "26", "27-28"],
  "9-0": ["0-1", "2-3", "4", "5-6", "7", "8-9", "10", "11", "12-13", "14", "15-16", "17", "18-19", "20", "21", "22-23", "24-25", "26", "27-28"],
  "9-4": ["0-2", "3", "4-5", "6", "7-8", "9", "10", "11-12", "13", "14-15", "16", "17-18", "19", "20", "21-22", "23", "24-25", "26", "27-28"],
  "9-8": ["0-2", "3", "4-5", "6", "7-8", "9", "10-11", "12", "13-14", "15", "16", "17-18", "19", "20-21", "22", "23", "24-25", "26", "27-28"],
  "10-0": ["0-2", "3-4", "5", "6-7", "8", "9-10", "11", "12-13", "14", "15", "16-17", "18", "19-20", "21", "22", "23", "24-25", "26", "27-28"],
  "10-4": ["0-2", "3-4", "5", "6-7", "8", "9-10", "11", "12-13", "14", "15-16", "17", "18", "19-20", "21", "22", "23-24", "25", "26", "27-28"],
  "10-8": ["0-3", "4", "5-6", "7", "8-9", "10", "11-12", "13", "14-15", "16", "17", "18-19", "20", "21", "22-23", "24", "25", "26", "27-28"],
  "11-0": ["0-3", "4", "5-6", "7", "8-9", "10", "11-12", "13", "14-15", "16", "17-18", "19", "20", "21-22", "23", "24", "25", "26", "27-28"],
  "11-4": ["0-3", "4-5", "6", "7-8", "9", "10-11", "12", "13-14", "15", "16", "17-18", "19", "20", "21-22", "23", "24", "25", "26", "27-28"],
  "11-8": ["0-3", "4-5", "6", "7-8", "9", "10-11", "12", "13-14", "15", "16-17", "18", "19", "20-21", "22", "23", "24-25", "26", "27", "28"],
  "12-0": ["0-3", "4-5", "6-7", "8", "9-10", "11", "12-13", "14", "15-16", "17", "18", "19-20", "21", "22", "23", "24-25", "26", "27", "28"],
  "12-4": ["0-3", "4-5", "6-7", "8", "9-10", "11", "12-13", "14", "15-16", "17", "18", "19-20", "21", "22", "23", "24-25", "26", "27", "28"],
  "12-8": ["0-4", "5", "6-7", "8", "9-10", "11", "12-13", "14", "15-16", "17", "18-19", "20", "21", "22", "23", "24-25", "26", "27", "28"],
  "13-0": ["0-4", "5", "6-7", "8-9", "10", "11-12", "13", "14-15", "16", "17", "18-19", "20", "21", "22", "23-24", "25", "26", "27", "28"],
  "13-4": ["0-4", "5-6", "7", "8-9", "10", "11-12", "13", "14-15", "16", "17-18", "19", "20", "21", "22-23", "24", "25", "26", "27", "28"],
  "13-8": ["0-4", "5-6", "7", "8-9", "10", "11-12", "13", "14-15", "16", "17-18", "19", "20", "21", "22-23", "24", "25", "26", "27", "28"],
  "14-0": ["0-4", "5-6", "7-8", "9", "10-11", "12", "13-14", "15", "16", "17-18", "19", "20", "21-22", "23", "24", "25", "26", "27", "28"],
  "14-4": ["0-5", "6", "7-8", "9", "10-11", "12", "13-14", "15", "16-17", "18", "19", "20", "21-22", "23", "24", "25", "26", "27", "28"],
  "14-8": ["0-5", "6", "7-8", "9", "10-11", "12", "13-14", "15", "16-17", "18", "19", "20-21", "22", "23", "24", "25", "26", "27", "28"],
  "15-0": ["0-5", "6-7", "8", "9-10", "11", "12-13", "14", "15", "16-17", "18", "19", "20-21", "22", "23", "24", "25", "26", "27", "28"],
  "15-4": ["0-5", "6-7", "8", "9-10", "11", "12-13", "14", "15-16", "17", "18", "19-20", "21", "22", "23", "24", "25", "26", "27", "28"],
  "15-8": ["0-5", "6-7", "8", "9-10", "11", "12-13", "14", "15-16", "17", "18", "19-20", "21", "22", "23", "24", "25", "26", "27", "28"],
  "16-0": ["0-6", "7", "8-9", "10", "11-12", "13", "14-15", "16", "17", "18-19", "20", "21", "22", "23-24", "25", "26", "27", "-", "28"],
  "16-4": ["0-6", "7", "8-9", "10", "11-12", "13", "14-15", "16", "17", "18-19", "20", "21", "22-23", "24", "25", "26", "27", "-", "28"],
  "16-8": ["0-6", "7-8", "9", "10-11", "12", "13", "14-15", "16", "17-18", "19", "20", "21", "22-23", "24", "25", "26", "27", "28", "-"]
};

for (const faixaEtariaKey in dadosConceitosFigurativos) {
    if (dadosConceitosFigurativos.hasOwnProperty(faixaEtariaKey)) {
        const rawScoreStrings = dadosConceitosFigurativos[faixaEtariaKey];
        rawScoreStrings.forEach((brutoOuIntervalo, index) => {
            const valorPonderado = index + 1;
            if (brutoOuIntervalo !== "-") {
                 preencherBrutos("cn", faixaEtariaKey, brutoOuIntervalo, valorPonderado);
            }
        });
    }
}


// --- DADOS NORMATIVOS PARA CÓDIGOS ('cd') ---
const dadosCodigos = {
  "6-0": ["-", "0-2", "3-6", "7-10", "11-14", "15-19", "20-23", "24-27", "28-31", "32-35", "36-40", "41-44", "45-49", "50-53", "54-57", "58-60", "61-62", "63-64", "65"],
  "6-4": ["0-1", "2-4", "5-8", "9-12", "13-16", "17-21", "22-25", "26-29", "30-33", "34-37", "38-42", "43-46", "47-51", "52-55", "56-58", "59-61", "62-63", "64-65", "-"],
  "6-8": ["0-3", "4-6", "7-10", "11-14", "15-18", "19-23", "24-27", "28-31", "32-35", "36-39", "40-43", "44-47", "48-52", "53-56", "57-59", "60-62", "63-64", "65", "-"],
  "7-0": ["0-4", "5-8", "9-11", "12-15", "16-19", "20-24", "25-28", "29-32", "33-36", "37-41", "42-45", "46-49", "50-54", "55-58", "59-61", "62-63", "64-65", "-", "-"],
  "7-4": ["0-5", "6-9", "10-12", "13-16", "17-20", "21-25", "26-30", "31-34", "35-38", "39-43", "44-47", "48-51", "52-56", "57-60", "61-62", "63-64", "65", "-", "."], // Note o "." aqui
  "7-8": ["0-6", "7-10", "11-13", "14-17", "18-21", "22-26", "27-30", "31-35", "36-40", "41-45", "46-49", "50-53", "54-57", "58-60", "61-63", "64-65", "-", "-", "-"],
  "8-0": ["0-7", "8-10", "11-13", "14-16", "17-18", "19-20", "21-23", "24-25", "26-28", "29-31", "32-35", "36-39", "40-43", "44-46", "47-50", "51-56", "57-60", "61-64", "65-119"], // Nota: o último item é 19, não 20. Ajustado para 19 itens.
  "8-4": ["0-8", "9-11", "12-14", "15-17", "18-19", "20-21", "22-24", "25-26", "27-29", "30-32", "33-36", "37-40", "41-44", "45-48", "49-51", "52-57", "58-61", "62-65", "66-119"],
  "8-8": ["0-9", "10-12", "13-15", "16-18", "19-20", "21-22", "23-25", "26-27", "28-30", "31-33", "34-37", "38-41", "42-45", "46-49", "50-52", "53-58", "59-62", "63-66", "67-119"],
  "9-0": ["0-10", "11-13", "14-16", "17-19", "20-21", "22-23", "24-26", "27-28", "29-31", "32-34", "35-38", "39-42", "43-46", "47-50", "51-54", "55-59", "60-63", "64-67", "68-119"],
  "9-4": ["0-10", "11-13", "14-16", "17-19", "20-21", "22-24", "25-27", "28-29", "30-32", "33-35", "36-39", "40-44", "45-48", "49-51", "52-56", "57-60", "61-64", "65-68", "69-119"],
  "9-8": ["0-11", "12-14", "15-17", "18-20", "21-22", "23-25", "26-28", "29-31", "32-34", "35-37", "38-41", "42-45", "46-49", "50-53", "54-57", "58-61", "62-65", "66-69", "70-119"],
  "10-0": ["0-12", "13-15", "16-18", "19-21", "22-23", "24-26", "27-29", "30-32", "33-35", "36-39", "40-42", "43-46", "47-50", "51-54", "55-58", "59-62", "63-66", "67-70", "71-119"],
  "10-4": ["0-13", "14-16", "17-19", "20-22", "23-24", "25-27", "28-30", "31-33", "34-37", "38-40", "41-44", "45-48", "49-51", "52-55", "56-59", "60-63", "64-67", "68-71", "72-119"],
  "10-8": ["0-14", "15-17", "18-20", "21-23", "24-25", "26-28", "29-31", "32-35", "36-38", "39-42", "43-45", "46-49", "50-53", "54-57", "58-61", "62-64", "65-68", "69-72", "73-119"],
  "11-0": ["0-14", "15-17", "18-20", "21-23", "24-26", "27-29", "30-32", "33-36", "37-40", "41-43", "44-47", "48-51", "52-54", "55-58", "59-62", "63-66", "67-70", "71-73", "74-119"],
  "11-4": ["0-15", "16-18", "19-21", "22-24", "25-26", "27-30", "31-34", "35-37", "38-41", "42-45", "46-48", "49-52", "53-56", "57-59", "60-63", "64-67", "68-71", "72-75", "76-119"],
  "11-8": ["0-15", "16-18", "19-21", "22-25", "26-27", "28-31", "32-35", "36-38", "39-42", "43-46", "47-50", "51-53", "54-57", "58-61", "62-65", "66-69", "70-72", "73-76", "77-119"],
  "12-0": ["0-16", "17-19", "20-22", "23-26", "27-28", "29-32", "33-36", "37-40", "41-43", "44-47", "48-51", "52-55", "56-59", "60-62", "63-66", "67-70", "71-74", "75-78", "79-119"],
  "12-4": ["0-17", "18-20", "21-23", "24-26", "27-29", "30-33", "34-37", "38-41", "42-45", "46-48", "49-52", "53-56", "57-60", "61-64", "65-68", "69-72", "73-76", "77-80", "81-119"],
  "12-8": ["0-17", "18-20", "21-23", "24-27", "28-30", "31-34", "35-38", "39-42", "43-46", "47-50", "51-54", "55-57", "58-61", "62-65", "66-69", "70-74", "75-78", "79-82", "83-119"],
  "13-0": ["0-18", "19-21", "22-24", "25-28", "29-31", "32-35", "36-39", "40-43", "44-47", "48-51", "52-55", "56-59", "60-63", "64-67", "68-71", "72-75", "76-80", "81-84", "85-119"],
  "13-4": ["0-19", "20-22", "23-25", "26-28", "29-32", "33-36", "37-40", "41-44", "45-48", "49-52", "53-56", "57-60", "61-64", "65-69", "70-73", "74-77", "78-81", "82-86", "87-119"],
  "13-8": ["0-19", "20-22", "23-25", "26-29", "30-33", "34-37", "38-41", "42-45", "46-49", "50-53", "54-57", "58-61", "62-66", "67-70", "71-74", "75-79", "80-83", "84-88", "89-119"],
  "14-0": ["0-20", "21-23", "24-26", "27-30", "31-34", "35-38", "39-42", "43-46", "47-50", "51-54", "55-58", "59-63", "64-67", "68-72", "73-76", "77-81", "82-85", "86-90", "91-119"],
  "14-4": ["0-21", "22-24", "25-27", "28-31", "32-35", "36-38", "39-43", "44-47", "48-51", "52-55", "56-60", "61-64", "65-69", "70-73", "74-78", "79-83", "84-87", "88-92", "93-119"],
  "14-8": ["0-21", "22-24", "25-28", "29-32", "33-35", "36-39", "40-43", "44-47", "48-52", "53-56", "57-61", "62-65", "66-70", "71-75", "76-79", "80-84", "85-89", "90-94", "95-119"],
  "15-0": ["0-22", "23-25", "26-29", "30-32", "33-36", "37-40", "41-44", "45-48", "49-53", "54-57", "58-62", "63-66", "67-71", "72-76", "77-81", "82-86", "87-91", "92-97", "98-119"],
  "15-4": ["0-23", "24-26", "27-29", "30-33", "34-37", "38-41", "42-45", "46-49", "50-54", "55-58", "59-63", "64-68", "69-73", "74-78", "79-83", "84-88", "89-93", "94-99", "100-119"],
  "15-8": ["0-24", "25-27", "28-30", "31-34", "35-37", "38-41", "42-46", "47-50", "51-54", "55-59", "60-64", "65-69", "70-74", "75-79", "80-84", "85-90", "91-95", "96-101", "102-119"],
  "16-0": ["0-25", "26-28", "29-31", "32-34", "35-38", "39-42", "43-46", "47-51", "52-55", "56-60", "61-65", "66-70", "71-75", "76-81", "82-86", "87-91", "92-97", "98-103", "104-119"],
  "16-4": ["0-26", "27-29", "30-32", "33-35", "36-39", "40-43", "44-47", "48-51", "52-56", "57-61", "62-66", "67-71", "72-77", "78-82", "83-87", "88-93", "94-99", "100-105", "106-119"],
  "16-8": ["0-27", "28-30", "31-33", "34-36", "37-40", "41-44", "45-48", "49-52", "53-57", "58-62", "63-67", "68-72", "73-78", "79-83", "84-89", "90-95", "96-101", "102-107", "108-119"]
};

for (const faixaEtariaKey in dadosCodigos) {
    if (dadosCodigos.hasOwnProperty(faixaEtariaKey)) {
        const rawScoreStrings = dadosCodigos[faixaEtariaKey];
        rawScoreStrings.slice(0, 19).forEach((brutoOuIntervalo, index) => { // Processa até 19 itens
            const valorPonderado = index + 1; 
            if (brutoOuIntervalo !== "-" && brutoOuIntervalo !== ".") {
                 preencherBrutos("cd", faixaEtariaKey, brutoOuIntervalo, valorPonderado);
            }
        });
    }
}


// --- DADOS NORMATIVOS PARA VOCABULÁRIO ('vc') ---
const dadosVocabulario = {
  "6-0": ["0-2", "3", "4", "5-6", "7", "8-9", "10", "11-12", "13-14", "15-17", "18-19", "20-21", "22-24", "25-26", "27-29", "30-31", "32-34", "35-37", "38-68"],
  "6-4": ["0-3", "4", "5", "6-7", "8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-23", "24-25", "26-27", "28-30", "31-32", "33-35", "36-38", "39-68"],
  "6-8": ["0-4", "5", "6", "7-8", "9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-24", "25-26", "27-29", "30-31", "32-34", "35-36", "37-39", "40-68"],
  "7-0": ["0-4", "5", "6-7", "8-9", "10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-23", "24-25", "26-27", "28-30", "31-32", "33-35", "36-37", "38-40", "41-68"],
  "7-4": ["0-5", "6", "7-8", "9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-22", "23-24", "25-26", "27-28", "29-31", "32-33", "34-36", "37-38", "39-41", "42-68"],
  "7-8": ["0-5", "6-7", "8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-23", "24-25", "26-27", "28-30", "31-32", "33-34", "35-37", "38-39", "40-42", "43-68"],
  "8-0": ["0-5", "6-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-24", "25-26", "27-28", "29-31", "32-33", "34-35", "36-38", "39-40", "41-43", "44-68"],
  "8-4": ["0-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-25", "26-27", "28-29", "30-31", "32-34", "35-36", "37-39", "40-41", "42-44", "45-68"],
  "8-8": ["0-6", "7-8", "9-10", "11-12", "13-14", "15-17", "18-19", "20-21", "22-23", "24-25", "26-28", "29-30", "31-32", "33-35", "36-37", "38-39", "40-42", "43-44", "45-68"],
  "9-0": ["0-6", "7-9", "10-11", "12-13", "14-15", "16-17", "18-20", "21-22", "23-24", "25-26", "27-29", "30-31", "32-33", "34-36", "37-38", "39-40", "41-43", "44-45", "46-68"],
  "9-4": ["0-7", "8-9", "10-11", "12-14", "15-16", "17-18", "19-20", "21-23", "24-25", "26-27", "28-30", "31-32", "33-34", "35-36", "37-39", "40-41", "42-43", "44-46", "47-68"],
  "9-8": ["0-7", "8-9", "10-12", "13-14", "15-16", "17-19", "20-21", "22-23", "24-26", "27-28", "29-30", "31-33", "34-35", "36-37", "38-40", "41-42", "43-44", "45-46", "47-68"],
  "10-0": ["0-8", "9-10", "11-12", "13-15", "16-17", "18-19", "20-22", "23-24", "25-26", "27-29", "30-31", "32-33", "34-36", "37-38", "39-40", "41-43", "44-45", "46-47", "48-68"],
  "10-4": ["0-8", "9-10", "11-13", "14-15", "16-18", "19-20", "21-22", "23-25", "26-27", "28-30", "31-32", "33-34", "35-36", "37-39", "40-41", "42-43", "44-46", "47-48", "49-68"],
  "10-8": ["0-8", "9-11", "12-13", "14-16", "17-18", "19-21", "22-23", "24-25", "26-28", "29-30", "31-33", "34-35", "36-37", "38-39", "40-42", "43-44", "45-46", "47-48", "49-68"],
  "11-0": ["0-9", "10-11", "12-14", "15-16", "17-19", "20-21", "22-24", "25-26", "27-29", "30-31", "32-33", "34-36", "37-38", "39-40", "41-42", "43-45", "46-47", "48-49", "50-68"],
  "11-4": ["0-9", "10-12", "13-14", "15-17", "18-19", "20-22", "23-24", "25-27", "28-29", "30-32", "33-34", "35-36", "37-39", "40-41", "42-43", "44-45", "46-48", "49-50", "51-68"],
  "11-8": ["0-10", "11-12", "13-15", "16-17", "18-20", "21-22", "23-25", "26-27", "28-30", "31-32", "33-35", "36-37", "38-39", "40-42", "43-44", "45-46", "47-48", "49-51", "52-68"],
  "12-0": ["0-10", "11-13", "14-15", "16-18", "19-20", "21-23", "24-25", "26-28", "29-30", "31-33", "34-35", "36-38", "39-40", "41-42", "43-45", "46-47", "48-49", "50-51", "52-68"],
  "12-4": ["0-10", "11-13", "14-16", "17-18", "19-21", "22-23", "24-26", "27-28", "29-31", "32-33", "34-36", "37-38", "39-41", "42-43", "44-45", "46-48", "49-50", "51-52", "53-68"],
  "12-8": ["0-11", "12-13", "14-16", "17-19", "20-21", "22-24", "25-26", "27-29", "30-31", "32-34", "35-36", "37-39", "40-41", "42-44", "45-46", "47-48", "49-50", "51-53", "54-68"],
  "13-0": ["0-11", "12-14", "15-17", "18-19", "20-22", "23-24", "25-27", "28-29", "30-32", "33-34", "35-37", "38-39", "40-42", "43-44", "45-47", "48-49", "50-51", "52-53", "54-68"],
  "13-4": ["0-12", "13-14", "15-17", "18-20", "21-22", "23-25", "26-27", "28-30", "31-32", "33-35", "36-37", "38-40", "41-42", "43-45", "46-47", "48-50", "51-52", "53-54", "55-68"],
  "13-8": ["0-12", "13-15", "16-17", "18-20", "21-23", "24-25", "26-28", "29-30", "31-33", "34-35", "36-38", "39-40", "41-43", "44-45", "46-48", "49-50", "51-53", "54-55", "56-68"],
  "14-0": ["0-12", "13-15", "16-18", "19-20", "21-23", "24-26", "27-28", "29-31", "32-33", "34-36", "37-38", "39-41", "42-43", "44-46", "47-48", "49-51", "52-53", "54-56", "57-68"],
  "14-4": ["0-13", "14-15", "16-18", "19-21", "22-23", "24-26", "27-29", "30-31", "32-34", "35-36", "37-39", "40-41", "42-44", "45-46", "47-49", "50-51", "52-54", "55-56", "57-68"],
  "14-8": ["0-13", "14-16", "17-18", "19-21", "22-24", "25-26", "27-29", "30-32", "33-34", "35-37", "38-39", "40-42", "43-44", "45-47", "48-49", "50-52", "53-54", "55-57", "58-68"],
  "15-0": ["0-13", "14-16", "17-19", "20-21", "22-24", "25-27", "28-29", "30-32", "33-35", "36-37", "38-40", "41-42", "43-45", "46-47", "48-50", "51-52", "53-55", "56-57", "58-68"],
  "15-4": ["0-14", "15-16", "17-19", "20-22", "23-24", "25-27", "28-30", "31-32", "33-35", "36-38", "39-40", "41-43", "44-45", "46-48", "49-50", "51-53", "54-55", "56-58", "59-68"],
  "15-8": ["0-14", "15-16", "17-19", "20-22", "23-25", "26-27", "28-30", "31-33", "34-35", "36-38", "39-41", "42-43", "44-46", "47-48", "49-51", "52-53", "54-56", "57-58", "59-68"],
  "16-0": ["0-14", "15-16", "17-19", "20-22", "23-25", "26-27", "28-30", "31-33", "34-36", "37-38", "39-41", "42-43", "44-46", "47-49", "50-51", "52-54", "55-56", "57-59", "60-68"],
  "16-4": ["0-14", "15-16", "17-19", "20-22", "23-25", "26-28", "29-30", "31-33", "34-36", "37-39", "40-41", "42-44", "45-46", "47-49", "50-51", "52-54", "55-56", "57-59", "60-68"],
  "16-8": ["0-14", "15-16", "17-19", "20-22", "23-25", "26-28", "29-31", "32-33", "34-36", "37-39", "40-41", "42-44", "45-47", "48-49", "50-52", "53-54", "55-57", "58-59", "60-68"]
};
for (const faixaEtariaKey in dadosVocabulario) {
    if (dadosVocabulario.hasOwnProperty(faixaEtariaKey)) {
        const rawScoreStrings = dadosVocabulario[faixaEtariaKey];
        rawScoreStrings.forEach((brutoOuIntervalo, index) => {
            const valorPonderado = index + 1;
            if (brutoOuIntervalo !== "-") {
                 preencherBrutos("vc", faixaEtariaKey, brutoOuIntervalo, valorPonderado);
            }
        });
    }
}

// --- DADOS NORMATIVOS PARA SEQUÊNCIA DE NÚMEROS E LETRAS ('snl') ---
const dadosSequenciaNL = {
  "6-0":  ["-","-","-","0","-","1","2-3","4","5-6","7","8","9-10","11-12","13-14","15","16","17","18","19-30"],
  "6-4":  ["-","-","0","-","1","2","3-4","5","6-7","8","9-10","11","12","13-14","15","16","17-18","19","20-30"],
  "6-8":  ["-","-","0","-","1","2-3","4-5","6-7","8-9","10","-","11","12-13","14","15-16","17","18","19-20","21-30"],
  "7-0":  ["-","0","-","1","2-3","4","5-6","7","8-9","10","11","12-13","14","15","16-17","18","19","20","21-30"],
  "7-4":  ["0","-","1","2","3","4-5","6","7-8","9-10","11","12","13-14","15","16","17-18","19","20","21","22-30"],
  "7-8":  ["0","-","1","2-3","4","5-6","7","8-9","10","11-12","13","14","15-16","17","18","19","20","21","22-30"],
  "8-0":  ["0","-","1-2","3-4","5","6-7","8","9-10","11","12","13-14","15","16","17-18","19","20","21","22","23-30"],
  "8-4":  ["0","1","2","3-4","5-6","7","8-9","10","11-12","13","14","15-16","17","18","19","20","21","22","23-30"],
  "8-8":  ["0","1","2-3","4-5","6","7-8","9","10-11","12","13-14","15","16","17-18","19","20","21","22","23","24-30"],
  "9-0":  ["0","1","2-3","4-5","6-7","8","9-10","11","12-13","14","15-16","17","18","19","20","21","22","23","24-30"],
  "9-4":  ["0","1-2","3-4","5-6","7","8-9","10","11-12","13","14-15","16","17","18-19","20","21","22","23","-","24-30"],
  "9-8":  ["0","1-2","3-4","5-6","7-8","9","10-11","12","13-14","15","16","17-18","19","20","21","22","23","-","24-30"],
  "10-0": ["0-1","2-3","4-5","6","7-8","9-10","11","12-13","14","15-16","17","18","19","20","21","22","23","24","25-30"],
  "10-4": ["0-1","2-3","4-5","6-7","8","9-10","11-12","13","14-15","16","17","18-19","20","21","22","23","-","24","25-30"],
  "10-8": ["0-1","2-3","4-5","6-7","8-9","10","11-12","13","14-15","16","17-18","19","20","21","22","23","-","24","25-30"],
  "11-0": ["0-2","3-4","5","6-7","8-9","10-11","12","13-14","15","16-17","18","19","20","21","22","23","-","24","25-30"],
  "11-4": ["0-2","3-4","5-6","7-8","9","10-11","12-13","14","15-16","17","18","19","20","21-22","-","23","-","24","25-30"],
  "11-8": ["0-2","3-4","5-6","7-8","9-10","11","12-13","14","15-16","17","18","19-20","21","22","-","23","24","25","26-30"],
  "12-0": ["0-2","3-4","5-6","7-8","9-10","11-12","13","14-15","16","17","18-19","20","21","22","-","23","24","25","26-30"],
  "12-4": ["0-3","4-5","6-7","8-9","10","11-12","13","14-15","16","17-18","19","20","21","22","-","23","24","25","26-30"],
  "12-8": ["0-3","4-5","6-7","8-9","10-11","12","13-14","15","16-17","18","19","20","21","22","-","23","24","25","26-30"],
  "13-0": ["0-3","4-5","6-7","8-9","10-11","12","13-14","15","16-17","18","19","20","21","22","-","23","24","25","26-30"],
  "13-4": ["0-4","5-6","7-8","9-10","11","12-13","14","15-16","17","18","19-20","-","21","22","-","23","24","25","26-30"],
  "13-8": ["0-4","5-6","7-8","9-10","11","12-13","14","15-16","17","18-19","20","-","21","22","-","23","24","25","26-30"],
  "14-0": ["0-4","5-6","7-8","9-10","11-12","13","14-15","16","17-18","19","20","21","-","22","-","23","24","25","26-30"],
  "14-4": ["0-5","6-7","8-9","10-11","12","13","14-15","16","17-18","19","20","21","-","22","-","23","24","25","26-30"],
  "14-8": ["0-5","6-7","8-9","10-11","12","13-14","15","16","17-18","19","20","21","22","-","23","24","25","26","27-30"],
  "15-0": ["0-5","6-7","8-9","10-11","12-13","14","15","16-17","18","19","20","21","22","-","23","24","25","26","27-30"],
  "15-4": ["0-6","7-8","9-10","11-12","13","14","15","16-17","18","19-20","-","21","22","-","23","24","25","26","27-30"],
  "15-8": ["0-6","7-8","9-10","11-12","13","14","15-16","17","18-19","20","21","-","22","-","23","24","25","26","27-30"],
  "16-0": ["0-6","7-8","9-10","11-12","13","14","15-16","17","18-19","20","21","-","22","-","23","24","25","26","27-30"],
  "16-4": ["0-7","8-9","10-11","12-13","14","15","16","17-18","19","20","21","22","-","-","23","24","25","26","27-30"],
  "16-8": ["0-7","8-9","10-11","12-13","14","15-16","17","18","19","20","21","22","-","-","23","24","25","26","27-30"]
};

for (const faixaEtariaKey in dadosSequenciaNL) {
    if (dadosSequenciaNL.hasOwnProperty(faixaEtariaKey)) {
        const rawScoreStrings = dadosSequenciaNL[faixaEtariaKey];
        rawScoreStrings.forEach((brutoOuIntervalo, index) => {
            const valorPonderado = index + 1;
            if (brutoOuIntervalo !== "-") {
                 preencherBrutos("snl", faixaEtariaKey, brutoOuIntervalo, valorPonderado);
            }
        });
    }
}




// --- DADOS NORMATIVOS PARA RACIOCÍNIO MATRICIAL ('rm') ---
const dadosRaciocinioMatricial = {
  "6-0": ["0", "-", "1", "2", "3", "-", "4", "5", "6-7", "8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-23", "24-26", "27-35"],
  "6-4": ["0", "1", "2", "3", "-", "4", "5", "6", "7-8", "9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-24", "25-26", "27-35"],
  "6-8": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9-10", "11-12", "13-14", "15-16", "17", "18-20", "21-22", "23-24", "25-27", "28-35"],
  "7-0": ["0-1", "2", "3", "4", "5", "6", "7", "8", "9", "10-11", "12-13", "14-15", "16-17", "18", "19-20", "21-22", "23-25", "26-27", "28-35"],
  "7-4": ["0-1", "2", "3", "4", "5", "6", "7", "8-9", "10", "11-12", "13-14", "15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-28", "29-35"],
  "7-8": ["0-2", "3", "4", "5", "6", "7", "8", "9-10", "11", "12-13", "14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-28", "29-35"],
  "8-0": ["0-2", "3", "4", "5", "6", "7", "8-9", "10", "11-12", "13", "14-15", "16-17", "18-19", "20-21", "22", "23-24", "25-26", "27-29", "30-35"],
  "8-4": ["0-2", "3", "4", "5-6", "7", "8", "9", "10-11", "12-13", "14", "15-16", "17-18", "19", "20-21", "22-23", "24-25", "26-27", "28-29", "30-35"],
  "8-8": ["0-3", "4", "5", "6", "7", "8-9", "10", "11-12", "13", "14-15", "16-17", "18", "19-20", "21-22", "23-24", "25", "26-27", "28-29", "30-35"],
  "9-0": ["0-3", "4", "5", "6", "7-8", "9", "10-11", "12", "13-14", "15-16", "17", "18-19", "20-21", "22", "23-24", "25-26", "27-28", "29-30", "31-35"],
  "9-4": ["0-3", "4", "5", "6-7", "8", "9-10", "11", "12-13", "14-15", "16", "17-18", "19-20", "21", "22-23", "24-25", "26-27", "28-30", "31-35"], // Ajustado para 19 itens
  "9-8": ["0-3", "4", "5-6", "7", "8-9", "10", "11-12", "13-14", "15", "16-17", "18", "19-20", "21-22", "23-24", "25", "26-27", "28-29", "30-31", "32-35"],
  "10-0": ["0-3", "4-5", "6", "7-8", "9", "10-11", "12-13", "14", "15-16", "17", "18-19", "20-21", "22", "23-24", "25-26", "27", "28-29", "30-31", "32-35"],
  "10-4": ["0-3", "4-5", "6-7", "8", "9-10", "11", "12-13", "14-15", "16", "17-18", "19-20", "21", "22-23", "24-25", "26-28", "29-30", "31", "32-35"], // Ajustado para 19 itens
  "10-8": ["0-4", "5", "6-7", "8-9", "10", "11-12", "13-14", "15", "16-17", "18-19", "20", "21-22", "23-24", "25", "26-27", "28-30", "31-32", "33-35"], // Ajustado para 19 itens
  "11-0": ["0-4", "5-6", "7", "8-9", "10-11", "12", "13-14", "15-16", "17", "18-19", "20-21", "22", "23-24", "25-26", "27-29", "30-31", "32", "33-35"], // Ajustado para 19 itens
  "11-4": ["0-4", "5-6", "7-8", "9", "10-11", "12-13", "14-15", "16", "17-18", "19-20", "21", "22-23", "24-25", "26-28", "29", "30-31", "32-33", "34-35"], // Ajustado para 19 itens
  "11-8": ["0-4", "5-6", "7-8", "9-10", "11", "12-13", "14-15", "16-17", "18", "19-20", "21-22", "23", "24-25", "26-27", "28-30", "31", "32-33", "34-35"], // Ajustado para 19 itens
  "12-0": ["0-5", "6-7", "8", "9-10", "11-12", "13-14", "15", "16-17", "18-19", "20", "21-22", "23-24", "25-27", "28-29", "30", "31-32", "33", "34-35"], // Ajustado para 19 itens
  "12-4": ["0-5", "6-7", "8-9", "10", "11-12", "13-14", "15-16", "17", "18-19", "20-21", "22-23", "24-26", "27", "28-29", "30-31", "32", "33-34", "35"], // Ajustado para 19 itens
  "12-8": ["0-5", "6-7", "8-9", "10-11", "12-13", "14", "15-16", "17-18", "19-20", "21-23", "24-25", "26", "27-28", "29-30", "31", "32-33", "34", "35"], // Ajustado para 19 itens
  "13-0": ["0-6", "7", "8-9", "10-11", "12-13", "14-15", "16", "17-18", "19-20", "21-22", "23-25", "26-27", "28", "29-30", "31-32", "33", "34", "35"], // Ajustado para 19 itens
  "13-4": ["0-6", "7-8", "9-10", "11", "12-13", "14-15", "16-17", "18-20", "21-22", "23-24", "25", "26-27", "28-29", "30", "31-32", "33", "34", "35"], // Ajustado para 19 itens
  "13-8": ["0-6", "7-8", "9-10", "11-12", "13", "14-15", "16-17", "18-19", "20-21", "22-24", "25-26", "27", "28-29", "30-31", "32", "33", "34", "35"], // Ajustado para 19 itens
  "14-0": ["0-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-19", "20-21", "22-23", "24", "25-26", "27-28", "29", "30-31", "32-33", "34", "-", "35"],
  "14-4": ["0-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-21", "22-23", "24-25", "26", "27-28", "29-30", "31", "32-33", "34", "-", "35"],
  "14-8": ["0-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-23", "24-25", "26", "27-28", "29-30", "31-32", "33", "34", "-", "35"],
  "15-0": ["0-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-25", "26-27", "28", "29-30", "31-32", "33", "34", "-", "35"],
  "15-4": ["0-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-29", "30-31", "32", "33", "34", "-", "35"],
  "15-8": ["0-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-29", "30-31", "32", "33", "34", "-", "35"],
  "16-0": ["0-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-28", "29-31", "32", "33", "34", "-", "35"],
  "16-4": ["0-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-26", "27-28", "29", "30-31", "32", "33", "34", "-", "35"],
  "16-8": ["0-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-26", "27-28", "29", "30-31", "32", "33", "34", "-", "35"]
};

for (const faixaEtariaKey in dadosRaciocinioMatricial) {
    if (dadosRaciocinioMatricial.hasOwnProperty(faixaEtariaKey)) {
        const rawScoreStrings = dadosRaciocinioMatricial[faixaEtariaKey];
        // Assegura que processamos apenas 19 entradas para os ponderados de 1 a 19
        rawScoreStrings.slice(0, 19).forEach((brutoOuIntervalo, index) => {
            const valorPonderado = index + 1;
            if (brutoOuIntervalo !== "-") {
                 preencherBrutos("rm", faixaEtariaKey, brutoOuIntervalo, valorPonderado);
            }
        });
    }
}

// --- DADOS NORMATIVOS PARA COMPREENSÃO ('co') ---
const dadosCompreensao = {
  "6-0": ["-", "0", "-", "1", "2", "3", "4-5", "6", "7-8", "9", "10-11", "12-13", "14-15", "16", "17-18", "19-20", "21-22", "23-24", "25-42"],
  "6-4": ["0", "-", "1", "2", "3", "4", "5-6", "7", "8-9", "10", "11-12", "13-14", "15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-42"],
  "6-8": ["0", "-", "1", "2", "3-4", "5", "6", "7-8", "9-10", "11", "12-13", "14", "15-16", "17-18", "19-20", "21-22", "23", "24-25", "26-42"],
  "7-0": ["0", "-", "1-2", "3", "4", "5-6", "7", "8-9", "10", "11-12", "13-14", "15", "16-17", "18-19", "20-21", "22", "23-24", "25-26", "27-42"],
  "7-4": ["0", "1", "2", "3-4", "5", "6", "7-8", "9-10", "11", "12-13", "14", "15-16", "17-18", "19-20", "21", "22-23", "24-25", "26-27", "28-42"],
  "7-8": ["0", "1", "2-3", "4", "5-6", "7", "8-9", "10", "11-12", "13-14", "15", "16-17", "18-19", "20", "21-22", "23-24", "25-26", "27-28", "29-42"],
  "8-0": ["0", "1-2", "3", "4-5", "6", "7-8", "9", "10-11", "12-13", "14", "15-16", "17-18", "19-20", "21", "22-23", "24-25", "26-27", "28", "29-42"],
  "8-4": ["0", "1-2", "3-4", "5", "6-7", "8-9", "10", "11-12", "13", "14-15", "16-17", "18-19", "20", "21-22", "23-24", "25-26", "27", "28-29", "30-42"],
  "8-8": ["0-1", "2-3", "4", "5-6", "7-8", "9", "10-11", "12-13", "14", "15-16", "17-18", "19", "20-21", "22-23", "24-25", "26", "27-28", "29-30", "31-42"],
  "9-0": ["0-1", "2-3", "4-5", "6-7", "8", "9-10", "11-12", "13", "14-15", "16-17", "18", "19-20", "21-22", "23-24", "25", "26-27", "28-29", "30-31", "32-42"],
  "9-4": ["0-2", "3-4", "5-6", "7", "8-9", "10-11", "12", "13-14", "15-16", "17", "18-19", "20-21", "22-23", "24", "25-26", "27-28", "29-30", "31-32", "33-42"],
  "9-8": ["0-2", "3-4", "5-6", "7-8", "9", "10-11", "12-13", "14-15", "16", "17-18", "19-20", "21-22", "23", "24-25", "26-27", "28-29", "30", "31-32", "33-42"],
  "10-0": ["0-3", "4-5", "6-7", "8", "9-10", "11-12", "13", "14-15", "16-17", "18-19", "20", "21-22", "23-24", "25-26", "27-28", "29", "30-31", "32-33", "34-42"],
  "10-4": ["0-3", "4-5", "6-7", "8-9", "10-11", "12", "13-14", "15-16", "17-18", "19", "20-21", "22-23", "24-25", "26", "27-28", "29-30", "31-32", "33-34", "35-42"],
  "10-8": ["0-4", "5-6", "7-8", "9", "10-11", "12-13", "14-15", "16", "17-18", "19-20", "21-22", "23-24", "25", "26-27", "28-29", "30-31", "32-33", "34", "35-42"],
  "11-0": ["0-4", "5-6", "7-8", "9-10", "11-12", "13", "14-15", "16-17", "18-19", "20-21", "22", "23-24", "25-26", "27-28", "29-30", "31", "32-33", "34-35", "36-42"],
  "11-4": ["0-5", "6-7", "8-9", "10", "11-12", "13-14", "15-16", "17-18", "19", "20-21", "22-23", "24-25", "26-27", "28", "29-30", "31-32", "33-34", "35-36", "37-42"],
  "11-8": ["0-5", "6-7", "8-9", "10-11", "12-13", "14", "15-16", "17-18", "19-20", "21-22", "23-24", "25", "26-27", "28-29", "30-31", "32-33", "34-35", "36", "37-42"],
  "12-0": ["0-6", "7-8", "9", "10-11", "12-13", "14-15", "16-17", "18-19", "20", "21-22", "23-24", "25-26", "27-28", "29-30", "31-32", "33", "34-35", "36-37", "38-42"],
  "12-4": ["0-6", "7-8", "9-10", "11-12", "13-14", "15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28", "29-30", "31-32", "33-34", "35-36", "37-38", "39-42"],
  "12-8": ["0-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23", "24-25", "26-27", "28-29", "30-31", "32-33", "34", "35-36", "37-38", "39-42"],
  "13-0": ["0-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22", "23-24", "25-26", "27-28", "29-30", "31-32", "33-34", "35", "36-37", "38-39", "40-42"],
  "13-4": ["0-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28-29", "30", "31-32", "33-34", "35-36", "37-38", "39", "40-42"],
  "13-8": ["0-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28-29", "30-31", "32-33", "34-35", "36", "37-38", "39-40", "41-42"],
  "14-0": ["0-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28-29", "30-31", "32-33", "34-35", "36-37", "38", "39-40", "41-42"],
  "14-4": ["0-7", "8-9", "10-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-28", "29-30", "31-32", "33-34", "35", "36-37", "38-39", "40", "41-42"],
  "14-8": ["0-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-21", "22-23", "24-25", "26-27", "28-29", "30", "31-32", "33-34", "35-36", "37", "38-39", "40", "41-42"],
  "15-0": ["0-8", "9-10", "11-12", "13-14", "15-16", "17-19", "20-21", "22-23", "24-25", "26-27", "28-29", "30-31", "32-33", "34", "35-36", "37-38", "39", "40", "41-42"],
  "15-4": ["0-8", "9-10", "11-12", "13-14", "15-17", "18-19", "20-21", "22-23", "24-25", "26-28", "29", "30-31", "32-33", "34-35", "36", "37-38", "39", "40", "41-42"],
  "15-8": ["0-8", "9-10", "11-12", "13-15", "16-17", "18-19", "20-21", "22-24", "25-26", "27-28", "29-30", "31-32", "33", "34-35", "36-37", "38", "39", "40", "41-42"],
  "16-0": ["0-8", "9-10", "11-12", "13-15", "16-17", "18-19", "20-22", "23-24", "25-26", "27-28", "29-30", "31-32", "33-34", "35", "36-37", "38", "39", "40", "41-42"],
  "16-4": ["0-8", "9-10", "11-12", "13-15", "16-17", "18-20", "21-22", "23-24", "25-27", "28-29", "30-31", "32", "33-34", "35-36", "37", "38", "39", "40", "41-42"],
  "16-8": ["0-8", "9-10", "11-12", "13-15", "16-17", "18-20", "21-22", "23-24", "25-27", "28-29", "30-31", "32", "33-34", "35-36", "37", "38", "39", "40", "41-42"]
};
for (const faixaEtariaKey in dadosCompreensao) {
    if (dadosCompreensao.hasOwnProperty(faixaEtariaKey)) {
        const rawScoreStrings = dadosCompreensao[faixaEtariaKey];
        rawScoreStrings.forEach((brutoOuIntervalo, index) => {
            const valorPonderado = index + 1;
            if (brutoOuIntervalo !== "-") {
                 preencherBrutos("co", faixaEtariaKey, brutoOuIntervalo, valorPonderado);
            }
        });
    }
}



// --- DADOS NORMATIVOS PARA PROCURAR SÍMBOLOS ('ps') ---
const dadosProcurarSimbolos = {
  "6-0": ["-", "0", "-", "1", "2-3", "4-5", "6-7", "8-9", "10-12", "13-14", "15-16", "17-19", "20-21", "22-23", "24-26", "27-28", "29-31", "32-34", "35-45"],
  "6-4": ["0", "-", "1", "2", "3-4", "5-6", "7-8", "9-11", "12-14", "15", "16-18", "19-21", "22-23", "24-25", "26-28", "29-30", "31-33", "34-36", "37-45"],
  "6-8": ["0", "-", "1", "2-3", "4-5", "6-8", "9-10", "11-13", "14-15", "16-17", "18-20", "21-22", "23-25", "26-27", "28-30", "31-32", "33-35", "36-38", "39-45"],
  "7-0": ["0", "1", "2", "3-4", "5-7", "8-9", "10-12", "13-14", "15-17", "18-19", "20-22", "23-24", "25-27", "28-29", "30-32", "33-34", "35-37", "38-40", "41-45"],
  "7-4": ["0", "1", "2-3", "4-5", "6-8", "9-11", "12-13", "14-16", "17-18", "19-21", "22-24", "25-26", "27-29", "30-31", "32-34", "35-36", "37-39", "40-42", "43-45"],
  "7-8": ["0", "1-2", "3-4", "5-6", "7-9", "10-12", "13-15", "16-17", "18-20", "21-23", "24-26", "27-28", "29-31", "32-33", "34-36", "37-38", "39-41", "42-44", "45"],
  "8-0": ["0", "1", "2", "3-4", "5", "6-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-22", "23-24", "25-27", "28-29", "30-32", "33-34", "35-60"].slice(0,19),
  "8-4": ["0", "1", "2-3", "4-5", "6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-23", "24-25", "26-27", "28-30", "31-33", "34-35", "36-60"].slice(0,19),
  "8-8": ["0", "1-2", "3", "4-5", "6-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-24", "25-26", "27-28", "29-31", "32-33", "34-35", "36-60"].slice(0,19),
  "9-0": ["0", "1-2", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-27", "28-29", "30-31", "32-34", "35-36", "37-60"].slice(0,19),
  "9-4": ["0", "1-2", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-23", "24-25", "26-27", "28-29", "30-32", "33-34", "35-36", "37-60"].slice(0,19),
  "9-8": ["0-1", "2-3", "4-5", "6-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-28", "29-30", "31-32", "33-34", "35-37", "38-60"].slice(0,19),
  "10-0": ["0-1", "2-3", "4-5", "6-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-24", "25-26", "27-28", "29-30", "31-32", "33-35", "36-37", "38-60"].slice(0,19),
  "10-4": ["0-1", "2-3", "4-5", "6-7", "8-9", "10-11", "12-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-28", "29-31", "32-33", "34-35", "36-37", "38-60"].slice(0,19),
  "10-8": ["0-1", "2-3", "4-5", "6-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-25", "26-27", "28-29", "30-31", "32-33", "34-35", "36-38", "39-60"].slice(0,19),
  "11-0": ["0-1", "2-3", "4-5", "6-8", "9-10", "11-12", "13-14", "15-16", "17-19", "20-21", "22-23", "24-25", "26-27", "28-29", "30-31", "32-34", "35-36", "37-38", "39-60"].slice(0,19),
  "11-4": ["0-1", "2-3", "4-5", "6-8", "9-10", "11-12", "13-15", "16-17", "18-19", "20-21", "22-23", "24-26", "27-28", "29-30", "31-32", "33-34", "35-36", "37-38", "39-60"].slice(0,19),
  "11-8": ["0-1", "2-3", "4-5", "6-8", "9-10", "11-13", "14-15", "16-17", "18-19", "20-22", "23-24", "25-26", "27-28", "29-30", "31-32", "33-34", "35-36", "37-39", "40-60"].slice(0,19),
  "12-0": ["0-2", "3-4", "5-6", "7-9", "10-11", "12-13", "14-15", "16-18", "19-20", "21-22", "23-24", "25-27", "28-29", "30-31", "32-33", "34-35", "36-37", "38-39", "40-60"].slice(0,19),
  "12-4": ["0-2", "3-4", "5-6", "7-9", "10-11", "12-13", "14-16", "17-18", "19-21", "22-23", "24-25", "26-27", "28-29", "30-31", "32-33", "34-35", "36-37", "38-40", "41-60"].slice(0,19),
  "12-8": ["0-2", "3-4", "5-6", "7-9", "10-11", "12-14", "15-16", "17-19", "20-21", "22-23", "24-26", "27-28", "29-30", "31-32", "33-34", "35-36", "37-38", "39-40", "41-60"].slice(0,19),
  "13-0": ["0-3", "4-5", "6-7", "8-10", "11-12", "13-14", "15-17", "18-19", "20-22", "23-24", "25-26", "27-29", "30-31", "32-33", "34-35", "36-37", "38-39", "40-41", "42-60"].slice(0,19),
  "13-4": ["0-3", "4-5", "6-7", "8-10", "11-12", "13-15", "16-17", "18-20", "21-22", "23-25", "26-27", "28-29", "30-31", "32-34", "35", "36-37", "38-39", "40-42", "43-60"].slice(0,19),
  "13-8": ["0-3", "4-5", "6-7", "8-10", "11-12", "13-15", "16-18", "19-20", "21-23", "24-25", "26-28", "29-30", "31-32", "33-34", "35-36", "37-38", "39-40", "41-43", "44-60"].slice(0,19),
  "14-0": ["0-4", "5-6", "7-8", "9-11", "12-13", "14-16", "17-18", "19-21", "22-24", "25-26", "27-29", "30-31", "32-33", "34-35", "36-37", "38-39", "40-41", "42-44", "45-60"].slice(0,19),
  "14-4": ["0-4", "5-6", "7-8", "9-11", "12-13", "14-16", "17-19", "20-22", "23-24", "25-27", "28-29", "30-32", "33-34", "35-36", "37-38", "39-40", "41-42", "43-45", "46-60"].slice(0,19),
  "14-8": ["0-4", "5-6", "7-8", "9-11", "12-13", "14-16", "17-19", "20-22", "23-25", "26-28", "29-30", "31-33", "34-35", "36-37", "38-39", "40-41", "42-43", "44-46", "47-60"].slice(0,19),
  "15-0": ["0-5", "6-7", "8-9", "10-12", "13-14", "15-17", "18-20", "21-23", "24-26", "27-28", "29-31", "32-33", "34-35", "36-38", "39-40", "41-42", "43-44", "45-47", "48-60"].slice(0,19),
  "15-4": ["0-5", "6-7", "8-9", "10-12", "13-14", "15-17", "18-20", "21-23", "24-26", "27-29", "30-31", "32-34", "35-36", "37-39", "40-41", "42-43", "44-45", "46-47", "48-60"].slice(0,19),
  "15-8": ["0-5", "6-7", "8-9", "10-12", "13-14", "15-17", "18-20", "21-23", "24-26", "27-29", "30-32", "33-35", "36-37", "38-39", "40-41", "42-43", "44-45", "46-48", "49-60"].slice(0,19),
  "16-0": ["0-6", "7-8", "9-10", "11-13", "14-15", "16-18", "19-21", "22-24", "25-27", "28-30", "31-33", "34-35", "36-37", "38-40", "41-42", "43-44", "45-46", "47-48", "49-60"].slice(0,19),
  "16-4": ["0-6", "7-8", "9-10", "11-13", "14-15", "16-18", "19-21", "22-24", "25-27", "28-30", "31-33", "34-36", "37-38", "39-40", "41-42", "43-44", "45-46", "47-49", "50-60"].slice(0,19),
  "16-8": ["0-6", "7-8", "9-10", "11-13", "14-15", "16-18", "19-21", "22-24", "25-27", "28-30", "31-33", "34-36", "37-38", "39-40", "41-42", "43-44", "45-46", "47-49", "50-60"].slice(0,19)
};
for (const faixaEtariaKey in dadosProcurarSimbolos) {
    if (dadosProcurarSimbolos.hasOwnProperty(faixaEtariaKey)) {
        const rawScoreStrings = dadosProcurarSimbolos[faixaEtariaKey];
        // Assegura que processamos apenas os 19 primeiros itens para os ponderados de 1 a 19
        rawScoreStrings.slice(0, 19).forEach((brutoOuIntervalo, index) => {
            const valorPonderado = index + 1;
            if (brutoOuIntervalo !== "-") {
                 preencherBrutos("ps", faixaEtariaKey, brutoOuIntervalo, valorPonderado);
            }
        });
    }
}

// --- DADOS NORMATIVOS PARA COMPLETAR FIGURAS ('cf') ---
const dadosCompletarFiguras = {
  "6-0": ["-", "-", "-", "1", "2-3", "4-5", "6", "7-8", "9-10", "11-12", "13-15", "16-17", "18-19", "20-21", "22-24", "25-26", "27-28", "29-31", "32-38"],
  "6-4": ["-", "-", "1", "2", "3-4", "5-6", "7-8", "9-10", "11-12", "13", "14-15", "16-17", "18-20", "21-23", "24-25", "26-27", "28-29", "30-31", "32-38"],
  "6-8": ["0", "1", "2", "3", "4-5", "6-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28-30", "31-32", "33-38"],
  "7-0": ["0", "1", "2", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-28", "29-30", "31-32", "33-38"],
  "7-4": ["0", "1", "2-3", "4-5", "6-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28-29", "30-31", "32-33", "34-38"],
  "7-8": ["0", "1-2", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21", "22-23", "24-25", "26-27", "28-29", "30-31", "32-33", "34-38"],
  "8-0": ["0-1", "2-3", "4-5", "6-7", "8-9", "10-11", "12-13", "14-15", "16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-28", "29-30", "31-32", "33-34", "35-38"],
  "8-4": ["0-1", "2-3", "4-5", "6-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28-29", "30", "31-32", "33-34", "35-38"],
  "8-8": ["0-2", "3-4", "5-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25", "26-27", "28-29", "30-31", "32-33", "34-35", "35-38"].slice(0,19), // A última entrada "35-38" parece um erro de cópia, pois 35 já está no ponderado 18. Usei slice(0,19) e assumi que o último é "35" para pond. 19.
  "9-0": ["0-3", "4-5", "6-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22", "23-24", "25-26", "27-28", "29-30", "31", "32-33", "34-35", "36-38"],
  "9-4": ["0-3", "4-5", "6-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28", "29-30", "31-32", "33", "34-35", "36-38"],
  "9-8": ["0-4", "5-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25", "26-27", "28-29", "30", "31-32", "33-34", "35", "36-38"],
  "10-0": ["0-4", "5-6", "7-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20", "21-22", "23-24", "25-26", "27-28", "29", "30-31", "32", "33-34", "35", "36-38"],
  "10-4": ["0-5", "6-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26", "27-28", "29-30", "31", "32-33", "34", "35-36", "37-38"],
  "10-8": ["0-5", "6-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21", "22-23", "24-25", "26-27", "28", "29-30", "31-32", "33", "34-35", "36", "37-38"],
  "11-0": ["0-6", "7-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27", "28-29", "30", "31-32", "33", "34-35", "36", "37-38"],
  "11-4": ["0-6", "7-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22", "23-24", "25-26", "27-28", "29", "30-31", "32", "33-34", "35", "36", "37-38"],
  "11-8": ["0-7", "8-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26", "27-28", "29-30", "31", "32-33", "34", "35", "36", "37-38"],
  "12-0": ["0-7", "8-9", "10-11", "12-14", "15-16", "17-18", "19", "20-21", "22-23", "24-25", "26-27", "28", "29-30", "31-32", "33", "34", "35", "36", "37-38"],
  "12-4": ["0-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25", "26-27", "28-29", "30", "31-32", "33", "34-35", "36", "37", "38"],
  "12-8": ["0-8", "9-10", "11-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-28", "29", "30-31", "32", "33", "34-35", "36", "37", "38"],
  "13-0": ["0-8", "9-10", "11-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24", "25-26", "27-28", "29", "30-31", "32", "33-34", "35", "36", "37", "38"],
  "13-4": ["0-8", "9-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28", "29-30", "31", "32-33", "34", "35", "36", "37", "38"],
  "13-8": ["0-9", "10-11", "12-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28-29", "30", "31-32", "33", "34", "35", "36", "37", "38"],
  "14-0": ["0-9", "10-11", "12-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27", "28-29", "30", "31-32", "33", "34-35", "36", "-", "37", "38"],
  "14-4": ["0-9", "10-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-28", "29", "30-31", "32", "33-34", "35", "36", "-", "37", "38"],
  "14-8": ["0-9", "10-12", "13-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-28", "29", "30-31", "32", "33-34", "35", "36", "-", "37", "38"],
  "15-0": ["0-9", "10-12", "13-14", "15-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28", "29-30", "31", "32", "33-34", "35", "36", "-", "37", "38"],
  "15-4": ["0-10", "11-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28-29", "30", "31", "32-33", "34", "35", "36", "-", "37", "38"],
  "15-8": ["0-10", "11-13", "14-15", "16-17", "18-19", "20-21", "22-23", "24-25", "26-27", "28-29", "30", "31-32", "33", "34", "35", "36", "37", "-", "38"],
  "16-0": ["0-10", "11-13", "14-15", "16-17", "18-20", "21", "22-23", "24-26", "27-28", "29", "30-31", "32", "33", "34", "35", "36", "37", "-", "38"],
  "16-4": ["0-11", "12-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-28", "29-30", "31", "32", "33", "34", "35", "36", "37", "-", "38"],
  "16-8": ["0-11", "12-14", "15-16", "17-18", "19-20", "21-22", "23-24", "25-26", "27-28", "29-30", "31", "32", "33", "34", "35", "36", "37", "-", "38"]
};
for (const faixaEtariaKey in dadosCompletarFiguras) {
    if (dadosCompletarFiguras.hasOwnProperty(faixaEtariaKey)) {
        const rawScoreStrings = dadosCompletarFiguras[faixaEtariaKey];
        // Assegura que processamos apenas os 19 primeiros itens para os ponderados de 1 a 19
        // A faixa 8-8 tinha 20 itens, a última ("35-38") foi cortada pelo slice. Verifique se é o desejado.
        rawScoreStrings.slice(0, 19).forEach((brutoOuIntervalo, index) => {
            const valorPonderado = index + 1;
            if (brutoOuIntervalo !== "-") {
                 preencherBrutos("cf", faixaEtariaKey, brutoOuIntervalo, valorPonderado);
            }
        });
    }
}


// Tabela de Classificação dos Escores Ponderados
const TABELA_CLASSIFICACAO_PONDERADOS = {
    1: 'Muito Inferior', 2: 'Muito Inferior', 3: 'Muito Inferior',
    4: 'Inferior', 5: 'Inferior',
    6: 'Média Inferior', 7: 'Média Inferior',
    8: 'Média', 9: 'Média', 10: 'Média',
    11: 'Média Superior', 12: 'Média Superior',
    13: 'Superior', 14: 'Superior', 15: 'Superior',
    16: 'Muito Superior', 17: 'Muito Superior', 18: 'Muito Superior', 19: 'Muito Superior'
};

// --- FUNÇÕES DE CÁLCULO E ATUALIZAÇÃO ---
/**
 * Calcula a idade completa em anos, meses e dias.
 */
function calcularIdadeCompleta(dataNascimentoStr, dataAplicacaoStr) {
    if (!dataNascimentoStr || !dataAplicacaoStr) return null;
    const dataNascimento = new Date(dataNascimentoStr + 'T00:00:00');
    const dataAplicacao = new Date(dataAplicacaoStr + 'T00:00:00');
    if (isNaN(dataNascimento.getTime()) || isNaN(dataAplicacao.getTime()) || dataAplicacao < dataNascimento) {
        console.error("Data de nascimento ou aplicação inválida, ou data de aplicação anterior ao nascimento.");
        return null;
    }
    let anos = dataAplicacao.getFullYear() - dataNascimento.getFullYear();
    let meses = dataAplicacao.getMonth() - dataNascimento.getMonth();
    let dias = dataAplicacao.getDate() - dataNascimento.getDate();
    if (dias < 0) {
        meses--;
        const ultimoDiaMesAnterior = new Date(dataAplicacao.getFullYear(), dataAplicacao.getMonth(), 0).getDate();
        dias += ultimoDiaMesAnterior;
    }
    if (meses < 0) {
        anos--;
        meses += 12;
    }
    return { anos, meses, dias };
}

/**
 * Determina a chave da faixa etária normativa (ex: '6-0') com base na idade.
 */
function determinarFaixaEtaria(anos, meses) {
  if (anos === null || meses === null || isNaN(anos) || isNaN(meses)) return null;
  if (anos < 6 || anos > 16 || (anos === 16 && meses > 11)) {
    return null; 
  }
  if (meses >= 0 && meses <= 3) return `${anos}-0`;
  if (meses >= 4 && meses <= 7) return `${anos}-4`;
  if (meses >= 8 && meses <= 11) return `${anos}-8`;
  return null;
}

/**
 * Converte escore bruto para escore ponderado usando a tabela normativa.
 */
function converterParaPonderado(subtesteId, escoreBruto, faixaEtariaKey) {
  if (isNaN(escoreBruto) || escoreBruto < 0) return ''; 
  if (!faixaEtariaKey) return '';

  const tabelaSubteste = TABELAS_PONDERADAS[subtesteId];
  if (!tabelaSubteste || Object.keys(tabelaSubteste).length === 0) {
    return 'N/I';
  }

  const tabelaFaixa = tabelaSubteste[faixaEtariaKey];
  if (!tabelaFaixa) {
      return 'S/D'; 
  }

  if (!tabelaFaixa.hasOwnProperty(escoreBruto)) {
    return 'PB Invál.'; 
  }

  const ponderado = tabelaFaixa[escoreBruto];
  return (ponderado !== null && ponderado !== undefined) ? ponderado : 'S/P';
}

/**
 * Classifica o escore ponderado.
 */
function classificarPontoPonderado(p) {
  const ponderadoNum = Number(p);
  if (isNaN(ponderadoNum) || p === '' || typeof TABELA_CLASSIFICACAO_PONDERADOS[ponderadoNum] === 'undefined') {
    return '';
  }
  return TABELA_CLASSIFICACAO_PONDERADOS[ponderadoNum];
}

/**
 * Atualiza os campos de pontos ponderados e classificação de um subteste específico.
 */
function atualizarPontos(subtesteId) {
  const rawInput = document.getElementById(`raw-${subtesteId}`);
  const scaledInput = document.getElementById(`scaled-${subtesteId}`);
  const classInput = document.getElementById(`class-${subtesteId}`);
  const idadeField = document.getElementById('idade');

  if (!rawInput || !scaledInput || !classInput || !idadeField) {
    return;
  }

  const pontosBrutosStr = rawInput.value;
  const idadeCalculadaStr = idadeField.value;

  if (pontosBrutosStr === '') {
    scaledInput.value = '';
    classInput.value = '';
    return;
  }

  const pontosBrutos = parseInt(pontosBrutosStr, 10);

  if (!idadeCalculadaStr || idadeCalculadaStr === "Datas inválidas" || idadeCalculadaStr.includes("Preencha as datas") || idadeCalculadaStr.includes("fora da faixa")) {
    scaledInput.value = 'Idade?';
    classInput.value = '';
    return;
  }

  const idadeMatch = idadeCalculadaStr.match(/(\d+)\s*anos(?:,\s*|\s*e\s*)(\d+)\s*meses/);
  let anos = null;
  let meses = null;

  if (idadeMatch && idadeMatch.length === 3) {
      anos = parseInt(idadeMatch[1], 10);
      meses = parseInt(idadeMatch[2], 10);
  } else {
      const numerosIdade = idadeCalculadaStr.match(/\d+/g);
      if (numerosIdade && numerosIdade.length >= 2) {
          anos = parseInt(numerosIdade[0], 10);
          meses = parseInt(numerosIdade[1], 10);
      }
  }

  if (anos === null || meses === null) {
      scaledInput.value = 'Idade?';
      classInput.value = '';
      return;
  }

  const faixaEtariaKey = determinarFaixaEtaria(anos, meses);

  if (isNaN(pontosBrutos)) {
    scaledInput.value = 'PB Invál.';
    classInput.value = '';
    return;
  }
  
  let maxPontosSubteste = 68; // Default
  if (subtesteId === 'cb') maxPontosSubteste = 68;
  if (subtesteId === 'sm') maxPontosSubteste = 44;
  if (subtesteId === 'dg') maxPontosSubteste = 54; 
  if (subtesteId === 'cn') maxPontosSubteste = 28;
  if (subtesteId === 'cd') maxPontosSubteste = 119;
  if (subtesteId === 'vc') maxPontosSubteste = 68;
  if (subtesteId === 'snl') maxPontosSubteste = 30;
  if (subtesteId === 'rm') maxPontosSubteste = 35;
  if (subtesteId === 'co') maxPontosSubteste = 42;
  if (subtesteId === 'ps') maxPontosSubteste = 60;
  if (subtesteId === 'cf') maxPontosSubteste = 38;
  // Adicione outros limites aqui

  if (pontosBrutos < 0 || pontosBrutos > maxPontosSubteste) {
      scaledInput.value = 'PB Invál.';
      classInput.value = '';
      return;
  }

  if (!faixaEtariaKey) {
    scaledInput.value = 'Idade Inv.';
    classInput.value = '';
    return;
  }

  const ponderado = converterParaPonderado(subtesteId, pontosBrutos, faixaEtariaKey);
  const classificacao = classificarPontoPonderado(ponderado);

  scaledInput.value = ponderado;
  classInput.value = classificacao;
}

const ALL_SUBTEST_IDS = [
    'cb', 'sm', 'dg', 'cn', 'cd', 'vc', 'snl', 'rm', 'co', 'ps',
    'cf', 'ca', 'in', 'ar', 'rp'
];

function atualizarTodosCamposDePontos() {
    ALL_SUBTEST_IDS.forEach(id => {
        if (document.getElementById(`raw-${id}`)) {
            atualizarPontos(id);
        }
    });
}

function limparCamposResultadoSeNecessario() {
    ALL_SUBTEST_IDS.forEach(id => {
        const rawInput = document.getElementById(`raw-${id}`);
        if (rawInput && rawInput.value === '') { 
            const scaledInput = document.getElementById(`scaled-${id}`);
            const classInput = document.getElementById(`class-${id}`);
            if (scaledInput) scaledInput.value = '';
            if (classInput) classInput.value = '';
        }
    });
}

function calcularIdadeEAtualizarTela() {
    const dataNascimentoInput = document.getElementById('data-nascimento');
    const dataAplicacaoInput = document.getElementById('data-aplicacao');
    const idadeInput = document.getElementById('idade');

    if (!dataNascimentoInput.value || !dataAplicacaoInput.value) {
        idadeInput.value = 'Preencha as datas';
        limparCamposResultadoSeNecessario(); 
        atualizarTodosCamposDePontos(); 
        return;
    }

    const idadeCalculada = calcularIdadeCompleta(dataNascimentoInput.value, dataAplicacaoInput.value);

    if (idadeCalculada) {
        const faixaEtariaValida = determinarFaixaEtaria(idadeCalculada.anos, idadeCalculada.meses);
        if (faixaEtariaValida) {
            idadeInput.value = `${idadeCalculada.anos} anos e ${idadeCalculada.meses} meses`;
        } else {
            idadeInput.value = `Idade fora da faixa (6a0m-16a11m)`;
        }
    } else {
        idadeInput.value = 'Datas inválidas';
    }
    atualizarTodosCamposDePontos();
}

function calcularWISC(event) {
    event.preventDefault(); 

    const resultadoDiv = document.getElementById('resultado-wisc');
    const nome = document.getElementById('nome').value || "Não informado";
    const dataNascimento = document.getElementById('data-nascimento').value;
    const dataAplicacao = document.getElementById('data-aplicacao').value;
    const idadeCalculadaObj = calcularIdadeCompleta(dataNascimento, dataAplicacao);
    
    let idadeFormatada = "Não calculada ou inválida";
    let faixaEtariaKey = null;

    if (idadeCalculadaObj) {
        idadeFormatada = `${idadeCalculadaObj.anos} anos, ${idadeCalculadaObj.meses} meses e ${idadeCalculadaObj.dias} dias`;
        faixaEtariaKey = determinarFaixaEtaria(idadeCalculadaObj.anos, idadeCalculadaObj.meses);
        if (!faixaEtariaKey) {
            idadeFormatada += " (Fora da faixa WISC-V)";
        }
    }
    
    let htmlRelatorio = `<h3>Relatório de Correção WISC</h3>
        <p><strong>Nome:</strong> ${nome}</p>
        <p><strong>Data de Nascimento:</strong> ${dataNascimento || "Não informada"}</p>
        <p><strong>Data da Aplicação:</strong> ${dataAplicacao || "Não informada"}</p>
        <p><strong>Idade na Aplicação:</strong> ${idadeFormatada}</p>
        <p><strong>Faixa Etária Normativa Utilizada:</strong> ${faixaEtariaKey || "N/A"}</p>
        <hr>
        <h4>Resultados dos Subtestes:</h4>
        <ul>`;

    let somaPonderadosPrincipais = 0;
    let numPonderadosValidosPrincipais = 0;
    const MIN_SUBTESTS_PARA_QI = 7; 
    const subtestesPrincipaisIDs = ['cb', 'sm', 'dg', 'cn', 'cd', 'vc', 'snl', 'rm', 'co', 'ps'];

    ALL_SUBTEST_IDS.forEach(id => {
        const rawInput = document.getElementById(`raw-${id}`);
        const scaledInput = document.getElementById(`scaled-${id}`);
        const classInput = document.getElementById(`class-${id}`);
        const subtesteLabelElement = rawInput ? rawInput.closest('tr').querySelector('td:first-child') : null;
        const subtesteLabel = subtesteLabelElement ? subtesteLabelElement.textContent : id.toUpperCase();

        if (rawInput && scaledInput && classInput) {
            const pb = rawInput.value !== '' ? rawInput.value : 'Vazio';
            const pp = scaledInput.value || 'N/A'; 
            const cl = classInput.value || 'N/A';
            htmlRelatorio += `<li><strong>${subtesteLabel}:</strong> Bruto ${pb}, Ponderado ${pp}, Classificação: ${cl}</li>`;

            if (subtestesPrincipaisIDs.includes(id)) {
                const ponderadoNum = parseFloat(pp);
                if (!isNaN(ponderadoNum) && pp !== 'N/A' && pp !== 'S/P' && pp !== 'N/I' && pp !== 'S/D' && pp !== 'Idade Inv.' && pp !== 'Idade?' && pp !== 'PB Invál.') {
                    somaPonderadosPrincipais += ponderadoNum;
                    numPonderadosValidosPrincipais++;
                }
            }
        }
    });
    htmlRelatorio += `</ul><hr>`;

    htmlRelatorio += `<h4>Resultados Compostos (Estimativas):</h4>`;
    if (faixaEtariaKey) {
        if (numPonderadosValidosPrincipais >= MIN_SUBTESTS_PARA_QI) { 
            htmlRelatorio += `<p><strong>Soma dos Pontos Ponderados (Principais Válidos):</strong> ${somaPonderadosPrincipais} (de ${numPonderadosValidosPrincipais} subtestes)</p>`;
            const qiEstimado = 50 + Math.round(somaPonderadosPrincipais * 1.5); 
            htmlRelatorio += `<p><strong>QI Total Estimado (NÃO OFICIAL):</strong> ${qiEstimado}</p>`;
            htmlRelatorio += `<p><em><strong>Atenção:</strong> O cálculo de QI Total e Índices requer tabelas normativas específicas do manual WISC-V e não está implementado de forma precisa aqui.</em></p>`;
        } else {
            htmlRelatorio += `<p>Não há subtestes principais suficientes (${numPonderadosValidosPrincipais} de ${MIN_SUBTESTS_PARA_QI} necessários) para estimar o QI Total.</p>`;
        }
    } else {
         htmlRelatorio += `<p>Não é possível calcular resultados compostos devido à idade inválida ou fora da faixa.</p>`;
    }

    resultadoDiv.innerHTML = htmlRelatorio;
}

document.addEventListener('DOMContentLoaded', () => {
    const dataNascimentoInput = document.getElementById('data-nascimento');
    const dataAplicacaoInput = document.getElementById('data-aplicacao');
    const wiscForm = document.getElementById('wisc-form');

    if (dataNascimentoInput) {
        dataNascimentoInput.addEventListener('input', calcularIdadeEAtualizarTela);
    }
    if (dataAplicacaoInput) {
        dataAplicacaoInput.addEventListener('input', calcularIdadeEAtualizarTela);
    }

    ALL_SUBTEST_IDS.forEach(id => {
        const rawInput = document.getElementById(`raw-${id}`);
        if (rawInput) {
            rawInput.addEventListener('input', () => atualizarPontos(id));
        }
    });

    if (wiscForm) {
        wiscForm.addEventListener('submit', calcularWISC);
    }

    if (dataNascimentoInput && dataAplicacaoInput) { 
        if (dataNascimentoInput.value && dataAplicacaoInput.value) {
            calcularIdadeEAtualizarTela();
        } else {
            const idadeField = document.getElementById('idade');
            if (idadeField && !idadeField.value) idadeField.value = "Preencha as datas";
            atualizarTodosCamposDePontos(); 
        }
    }
});
